version: 2.1

commands:
  checkout_with_retry:
    description: "Custom command to checkout with retry logic"
    steps:
      - run:
          name: Checkout with retry
          command: |
            MAX_RETRIES=3
            RETRY_COUNT=0
            
            while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
              if circleci-agent step halt; then
                echo "Running checkout attempt $((RETRY_COUNT + 1)) of $MAX_RETRIES"
                if checkout; then
                  echo "✅ Checkout successful!"
                  exit 0
                else
                  echo "❌ Checkout failed"
                  RETRY_COUNT=$((RETRY_COUNT + 1))
                  if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                    echo "Waiting 10 seconds before retry..."
                    sleep 10
                  fi
                fi
              else
                echo "Failed to halt previous step"
                exit 1
              fi
            done
            
            echo "Failed to checkout after $MAX_RETRIES attempts"
            exit 1

executors:
  self-hosted:
    machine:
      resource_class: exo/hardware

jobs:
  check_chip:
    executor: self-hosted
    parameters:
      target_chip:
        type: string
        description: "The Apple chip to check for (e.g., M1, M2, M4)"
    steps:
      - checkout_with_retry
      - run:
          name: Check for << parameters.target_chip >> Chip
          command: |
            # Retrieve the chip information
            CHIP=$(sysctl -n machdep.cpu.brand_string | grep -o "M[1-4]" || echo "Unknown")
            
            # Display machine details
            echo "=== Machine Details ==="
            echo "Hostname: $(hostname)"
            echo "IP Address: $(ifconfig | grep 'inet ' | grep -v 127.0.0.1 | awk '{print $2}')"
            echo "Chip: $CHIP"
            echo "========================"

            # Check if the machine has the target chip
            if [[ "$CHIP" == "<< parameters.target_chip >>" ]]; then
              echo "✅ Runner has the << parameters.target_chip >> chip."
            else
              # Exit silently without error
              exit 0
            fi

workflows:
  check-chips:
    jobs:
      - check_chip:
          name: "Check Chip M1"
          target_chip: "M1"
      - check_chip:
          name: "Check Chip M2"
          target_chip: "M2"
      - check_chip:
          name: "Check Chip M4"
          target_chip: "M4"